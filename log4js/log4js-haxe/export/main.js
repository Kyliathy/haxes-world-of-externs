// Generated by Haxe 4.0.3
(function ($global) { "use strict";
var Log4js = require("log4js");
var SourceMapSupport = require("source-map-support");
var Test = function() { };
Test.main = function() {
	SourceMapSupport.install();
	console.dir("FUNCTION CALLS MADE");
	var logger = Log4js.getLogger("yamma");
	var gugu = new haxe_ds_StringMap();
	var bubu = [];
	bubu.push("cheese");
	var value = { appenders : bubu, level : "error"};
	if(__map_reserved["default"] != null) {
		gugu.setReserved("default",value);
	} else {
		gugu.h["default"] = value;
	}
	var stringConfig = "{\"default\": {\"appenders\": [\"cheese\"], \"level\": \"error\" } }";
	var objectConfig = JSON.parse(stringConfig);
	console.dir(objectConfig);
	var config = { appenders : { cheese : { type : "file", filename : "cheese.log"}}, categories : objectConfig};
	Log4js.configure(config);
	logger.level = "debug";
	logger.debug("Some debug messages");
	setTimeout(function() {
		console.log("Forced wait.");
		return;
	},4000);
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
};
var js_node_stream__$Writable_WritableNewOptionsAdapter_$Impl_$ = {};
js_node_stream__$Writable_WritableNewOptionsAdapter_$Impl_$.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$ = {};
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$._new = function(name,value) {
	var this1 = [name,value];
	return this1;
};
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$.get_name = function(this1) {
	return this1[0];
};
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$.get_value = function(this1) {
	return this1[1];
};
var __map_reserved = {};
Test.main();
})({});

//# sourceMappingURL=main.js.map