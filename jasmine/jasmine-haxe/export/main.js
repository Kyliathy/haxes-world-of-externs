// Generated by Haxe 4.1.5
(function ($global) { "use strict";
var SourceMapSupport = require("source-map-support");
var Test = function() { };
Test.main = function() {
	SourceMapSupport.install();
	describe("Jasmine",function() {
		it("should have Env",function() {
			expect(jasmine.getEnv()).toBeDefined();
		});
	});
	console.dir("FUNCTION CALLS MADE");
	setTimeout(function() {
		console.log("Forced wait.");
	},4000);
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_node_stream_WritableNewOptionsAdapter = {};
js_node_stream_WritableNewOptionsAdapter.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_url_URLSearchParamsEntry = {};
js_node_url_URLSearchParamsEntry._new = function(name,value) {
	var this1 = [name,value];
	return this1;
};
js_node_url_URLSearchParamsEntry.get_name = function(this1) {
	return this1[0];
};
js_node_url_URLSearchParamsEntry.get_value = function(this1) {
	return this1[1];
};
Test.main();
})({});

//# sourceMappingURL=main.js.map